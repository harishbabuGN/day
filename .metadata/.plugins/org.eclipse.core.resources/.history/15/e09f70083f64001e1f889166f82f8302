package com.xyram.daydrop.s3storage;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import com.amazonaws.util.IOUtils;
import com.amazonaws.AmazonClientException;
import com.amazonaws.AmazonServiceException;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.amazonaws.services.s3.model.ObjectMetadata;
import com.amazonaws.services.s3.model.S3Object;
import com.amazonaws.services.s3.model.S3ObjectInputStream;
import java.io.BufferedInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Service
public class S3BucketStorageService {
	
	private Logger logger = LoggerFactory.getLogger(S3BucketStorageService.class);
	
	@Autowired
    private AmazonS3 amazonS3;
	
	@Value("${application.bucket.name}")
	private String bucketName;
	
	@Value("${file-key}")
	private String keyName;
	
	/**
	 * Upload file into AWS S3
	 *
	 * @param keyName
	 * @param file
	 * @param prescriptionPath 
	 * @return String
	 */
	public String uploadFile(MultipartFile file, String path) throws IOException {
		logger.info("request to upload file ");
		try {

			String key = keyName+path+file.getOriginalFilename();
			AmazonS3 amazonS3Client = AmazonS3ClientBuilder.standard().build();
			ObjectMetadata metadata = new ObjectMetadata();
			InputStream fileInputStream = convertFileToInpuStream(file);
			metadata.setContentLength(file.getSize());
//			amazonS3Client.putObject(bucketName, key, fileInputStream, metadata);
			return key;
		} catch (AmazonServiceException serviceException) {
			throw serviceException;
		} catch (AmazonClientException clientException) {
			throw clientException;
		}
	}
	
	public static InputStream convertFileToInpuStream(MultipartFile file) throws IOException

	{

		InputStream targetStream = null;
		try {
			targetStream = new  BufferedInputStream(file.getInputStream());
			return targetStream;
		} catch (FileNotFoundException e) {
			
		}
		return targetStream;

	}
	
	@Async
	public byte[] getS3File(String keyNamePath) {
		byte[] content = null;
        logger.info("Downloading an object with key={} " , keyNamePath);
        final S3Object s3Object = amazonS3.getObject(bucketName, keyNamePath);
        final S3ObjectInputStream stream = s3Object.getObjectContent();
        try {
            content = IOUtils.toByteArray(stream);
            logger.info("File downloaded successfully.");
            s3Object.close();
        } catch(final IOException ex) {
            logger.info("IO Error Message= {}" , ex.getMessage());
        }
        return content;
	}

}
